version: '3.11'
services: 
  django_gunicorn:
    volumes:
      - static_files:/app/static
      - .:/app
    env_file:
      - .env
    build:
      context: .
    restart: always
    entrypoint : ["./entrypoint.sh"]
    expose:
      - 8000
    depends_on :
      - postgres 
  
  channels:
    build:
      context: .
    restart: always
    command: daphne -b 0.0.0.0 -p 8001 evento.asgi:application
    expose:
      - 8001
    volumes:
     - .:/app
    env_file:
      - .env
    depends_on:
      - django_gunicorn
      - redis
    extra_hosts:
      - "localhost:host-gateway"
   
  
  background_tasks:
    env_file:
      - .env
    restart: always
    build: .
    volumes:
      - .:/app
    entrypoint : ["./backgroundentypoint.sh"]
    depends_on:
      - django_gunicorn
      - postgres

  redis:
    image: redis:7.2.3-alpine
    restart: always
    ports:
      -  "${REDIS_PORT}:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    command: redis-server --requirepass ${REDIS_PASSWORD}

  nginx:
    build:
      context: ./nginx
      args:
        CONFIG_FILE: nginx.prod.conf.template
    restart: always
    ports:
      - "8000:80"
      - "443:443"
    depends_on: 
      - django_gunicorn
      - channels
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro  # Mount certificates as read-only
   

  postgres:
    image: postgres
    expose:
      - 5432
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
  
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${DEFAULT_PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${DEFAULT_PGADMIN_PASSWORD}
    ports:
      - "8080:80"  # Access pgAdmin externally
    depends_on:
      - postgres

volumes:
  static_files:
  postgres_data:
  redis_data:
